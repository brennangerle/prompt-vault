{
  "rules": {
    ".read": false,
    ".write": false,

    "public": { ".read": true, ".write": false },

    "email-verification": {
      "$id": { ".read": true, ".write": "auth != null" }
    },

    "users": {
      ".indexOn": ["email"],

      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'super_user' || (auth.token.email != null && query.orderByChild == 'email' && query.equalTo == auth.token.email))",

      "$userId": {
        ".read": "auth != null && (auth.uid == $userId || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
        ".write": "auth != null && (auth.uid == $userId || root.child('users').child(auth.uid).child('role').val() == 'super_user')"
      }
    },

    "teams": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_user'",
      "$teamId": {
        ".read": "auth != null && (root.child('teams').child($teamId).child('members').child(auth.uid).exists() || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
        ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_user'",
        "members": {
          ".read": "auth != null && (root.child('teams').child($teamId).child('members').child(auth.uid).exists() || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
          ".write": "auth != null && (root.child('teams').child($teamId).child('members').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
          "$memberId": {
            ".read": "auth != null && (root.child('teams').child($teamId).child('members').child(auth.uid).exists() || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
            ".write": "auth != null && (root.child('teams').child($teamId).child('members').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
            "role": { ".validate": "newData.val().matches(/^(member|admin)$/)" }
          }
        }
      }
    },

    "prompts": {
      ".indexOn": ["createdBy", "sharing", "teamId"],
      "$promptId": {
        ".read": "auth != null && (data.child('sharing').val() == 'global' || data.child('createdBy').val() == auth.uid || (data.child('sharing').val() == 'team' && data.child('teamId').exists() && root.child('teams').child(data.child('teamId').val()).child('members').child(auth.uid).exists()) || root.child('users').child(auth.uid).child('role').val() == 'super_user')",
        ".write": "auth != null && ((!data.exists() && newData.child('createdBy').val() == auth.uid) || (data.exists() && (data.child('createdBy').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'super_user')))",
        ".validate": "newData.hasChildren(['title','content','tags','sharing','createdBy']) && newData.child('sharing').val().matches(/^(private|team|global)$/) && (newData.child('sharing').val() != 'team' || (newData.hasChild('teamId') && root.child('teams').child(newData.child('teamId').val()).child('members').child(newData.child('createdBy').val()).exists())) && (newData.child('createdBy').val() == (data.exists() ? data.child('createdBy').val() : auth.uid))"
      }
    }
  }
}